@charset "UTF-8";
@font-face {
  font-family: "Goyang";
  src: url("fonts/Goyang.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}
*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
:root {
  --Black: #000;
  --white: white;
}

body * {
  font-family: Goyang;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

#App {
  margin: 1.5em auto;
  max-width: 1200px;
  column-gap: 1.5em;
}
section{
  width: 100%;
  display: flex;
  flex-flow: row wrap;
  gap: 10px;
  margin: 0 0 20px 0;
}
.darkModeToggle{
  width: 30px;
  height: 30px;
}
.darkModeToggle + label{
  display: flex;
  align-items: center;
}
.loading{
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  color: var(--white);
  font-size: 2rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
}
.searchInput {
  font-size: 40px;
  padding: 10px 15px;
  border: none;
  border-bottom: 1px solid var(--Black);
  flex: 1 1 70%;
}
button{ cursor: pointer; }
.randomButton {
  flex: 1 1 20%;
  font-size: 2rem;
}
.searchResult {
  margin-top: 10px;
  display: grid;
  grid-template-columns: repeat(4, minmax(250px, 1fr));
  grid-gap: 10px;
}
.searchResult .item {
  background-color: #eee;
  display: inline-block;
  margin: 0 0 1em;
  width: 100%;
  cursor: pointer;
}
.searchResult img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}


.imageInfo {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
}

.imageInfo .title {
  display: flex;
  justify-content: space-between;
}

.imageInfo .title,
.imageInfo .description {
  padding: 5px 10px;
}
.imageInfo .description {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}
.imageInfo .description dt {
  flex: 0 0 10%;
  font-weight: 800;
}
.imageInfo .description dd {
  flex: 1 1 90%;
}

.imageInfo .content-wrapper {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  background-color: #fff;
  border: 1px solid #eee;
  border-radius: 5px;
}
.imageInfo .content-wrapper img {
  width: 100%;
}
.imageInfo .content-wrapper h2 .close {
  padding: 2px 10px;
}


/* 반응형 컬럼 조절 */
/* 992px 이하: 3개 */
@media all and (max-width: 992px) {
  #App {
    max-width: 100%;
  }

  .searchResult {
    grid-template-columns: repeat(3, minmax(250px, 1fr));
  }

}
/** 768px 이하
 *  컬럼2개, 모달의 가로 길이를 디바이스 가로 길이만큼
 */
@media all and (max-width: 768px) {
  .searchResult {
    grid-template-columns: repeat(2, minmax(250px, 1fr));
  }
  .imageInfo .content-wrapper {
    width: 100%;
  }

}
/* 576px 이하: 1개 */
@media all and (max-width: 576px) {
  .searchResult {
    grid-template-columns: repeat(1, minmax(250px, 1fr));
  }
}


/* dark mode 처리 */
/* OS의 다크모드의 활성화 여부를 기반으로 조절할 경우 */
/* @media (prefers-color-scheme: dark) {
  body {
    background-color: var(--Black);
    color: var(--white);
  }
}
@media (prefers-color-scheme: light) {
  body {
    background-color: var(--white);
    color: var(--Black);
  }
  
} */


/* 보통의 경우 :root에 속성값조절로 테마 변경 */
:root[color-mode = 'dark'] {
  background-color: var(--Black);
  color: var(--white);
}
:root[color-mode = 'dark'] .imageInfo .content-wrapper{
  background-color: inherit;
  color: inherit;
}
:root[color-mode = 'dark'] .searchInput {
  background-color: inherit;
  color: inherit;
  border-bottom: 1px solid var(--white);
}
:root[color-mode = 'dark'] button {
  background-color: inherit;
  color: inherit;
  border: 1px solid rgba(255, 255, 255, 0.5);
}
:root[color-mode = 'dark'] button:hover {
  background-color: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.7);
}